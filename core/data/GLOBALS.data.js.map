{"version":3,"names":[],"mappings":"","sources":["assets/projects/AdvanceManualBuilder/core/data/GLOBALS.data.js"],"sourcesContent":["const CLASSES = {}\r\nCLASSES.GlobalObjectAccess = class GlobalObjectAccess {\r\n\r\n\tgetAllKeys() {\r\n\t\tvar a = []\r\n\t\tfor(const thisKey in this) {\r\n\t\t\ta.push(this)\r\n\t\t}\r\n\t\treturn a\r\n\t}\r\n\r\n\r\n\tadd(value) {\r\n\t\tvar key = this.getUniqueKey()\r\n\t\tif(value.GlobalKey === null || typeof value.GlobalKey == 'undefined') {\r\n\t\t\tvalue.GlobalKey = key\r\n\t\t\tthis[key] = value\r\n\t\t\t$(document).trigger(value.constructor.name + '_initialized', {\r\n\t\t\t\tobj: value,\r\n\t\t\t\tkey: key,\r\n\t\t\t\tclassKey: value.constructor.name,\r\n\t\t\t})\r\n\t\t\t$(document).trigger('initialized', {\r\n\t\t\t\tobj: value,\r\n\t\t\t\tkey: key,\r\n\t\t\t\tclassKey: value.constructor.name,\r\n\t\t\t})\r\n\t\t\treturn true\r\n\t\t} else if(typeof this[key] == 'undefined') {\r\n\t\t\tkey = value.GlobalKey\r\n\t\t\tthis[key] = value\r\n\t\t\t$(document).trigger(value.constructor.name + '_initialized', {\r\n\t\t\t\tsuccess: true,\r\n\t\t\t\tobj: value,\r\n\t\t\t\tkey: key,\r\n\t\t\t\tclassKey: value.constructor.name,\r\n\t\t\t})\r\n\t\t\t$(document).trigger('initialized', {\r\n\t\t\t\tsuccess: true,\r\n\t\t\t\tobj: value,\r\n\t\t\t\tkey: key,\r\n\t\t\t\tclassKey: value.constructor.name,\r\n\t\t\t})\r\n\t\t\treturn true\r\n\t\t} else {\r\n\t\t\t$(document).trigger('initialized', {\r\n\t\t\t\tsuccess: false,\r\n\t\t\t\tobj: value,\r\n\t\t\t\tkey: key,\r\n\t\t\t\tclassKey: value.constructor.name,\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tcount() {\r\n\t\tvar i = 0\r\n\t\tfor(const globalObjectAccessKey in this) {\r\n\t\t\ti++\r\n\t\t}\r\n\t\treturn i\r\n\t}\r\n\r\n\r\n\tgetUniqueKey() {\r\n\t\tvar key = getRandomString()\r\n\t\tvar keys = this.getAllKeys()\r\n\r\n\t\tfunction eq(element) {\r\n\t\t\treturn element == this\r\n\t\t}\r\n\r\n\t\tif(keys.length > 0) {\r\n\t\t\twhile(keys.find(eq, key)) {\r\n\t\t\t\tkey = getRandomString()\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn key\r\n\t}\r\n}\r\nvar GOA = new CLASSES.GlobalObjectAccess\r\nCLASSES.Manuals = class Manuals {\r\n\ti = 0\r\n\tindex = {}\r\n\r\n\r\n\tconstructor() {\r\n\t\tGOA.add(this)\r\n\t}\r\n\r\n\r\n\tadd(manual) {\r\n\t\tif(manual) {\r\n\t\t\tGOA.add(manual)\r\n\t\t\tif(typeof this[manual.GlobalKey] == 'undefined') {\r\n\t\t\t\tthis.index[this.i] = this[manual.GlobalKey] = manual\r\n\t\t\t\tmanual.ElementId = this.i\r\n\t\t\t\tthis.i++\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tConsole.error(manual)\r\n\t\t}\r\n\t}\r\n}\r\nvar manuals = new CLASSES.Manuals\r\nconst dataTypes = {}\r\nconst layout = {}\r\nconst current = {}\r\ncurrent.editor = ''\r\n\r\nclass Temp {\r\n\tadd(value) {\r\n\t\tvar key = getRandomString()\r\n\t\tif(value.temp === null) {\r\n\t\t\tvalue.temp = key\r\n\t\t\tthis[key] = value\r\n\t\t\treturn key\r\n\t\t} else {\r\n\t\t\treturn value.temp\r\n\t\t}\r\n\t}\r\n\r\n\r\n\ttrash() {\r\n\t\tfor(const thisKey in this) {\r\n\t\t\tif(this[thisKey] instanceof CLASSES.CommonClass) {\r\n\t\t\t\tthis[thisKey].temp = null\r\n\t\t\t\tthis[thisKey] = null\r\n\t\t\t\tdelete this[thisKey]\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tremove(value) {\r\n\t\tdelete this[value.temp]\r\n\t\tvalue.temp = null\r\n\t}\r\n}\r\n\r\nconst tmp = new Temp\r\nCLASSES.Template = class Template {\r\n\tget(s, v = null) {\r\n\t\tif(v != null && typeof (v) == 'object') {\r\n\t\t\tvar t = '' + this[s]\r\n\t\t\tfor(var k in v) {\r\n\t\t\t\tif(typeof v[k] != 'undefined' && v[k] != 'undefined') {\r\n\r\n\t\t\t\t\tt = t.replaceAll('$[' + k + ']', locale._(v[k]))\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tt = t.replaceAll(/\\$\\[.+?\\]/g, '')\r\n\t\t\treturn t\r\n\t\t} else return this[s]\r\n\t}\r\n}\r\n\r\n\r\n"],"file":"GLOBALS.data.js"}