{"version":3,"names":[],"mappings":"","sources":["assets/projects/AdvanceManualBuilder/core/js/class.class.js"],"sourcesContent":["CLASSES.ClassClass = class ClassClass extends CLASSES.CommonClass {\r\n\ttreeIcon = 'symbol-class'\r\n\teditorFields = {\r\n\t\tname: new CLASSES.EditorFieldsClass(this, {name: 'name'}),\r\n\t\tdescription: new CLASSES.EditorFieldsClass(this, {\r\n\t\t\tname: 'description',\r\n\t\t\ttype: 'class',\r\n\t\t\tclass: 'DescriptionClass'\r\n\t\t}),\r\n\t\tconstants: new CLASSES.EditorFieldsClass(this, {\r\n\t\t\tname: 'constants',\r\n\t\t\ttype: 'class[]',\r\n\t\t\tclass: 'ClassConstantsClass'\r\n\t\t}),\r\n\t\tvars: new CLASSES.EditorFieldsClass(this, {name: 'vars', type: 'class[]', class: 'ClassVarsClass'}),\r\n\t\tmethods: new CLASSES.EditorFieldsClass(this, {name: 'methods', type: 'class[]', class: 'methodsClass'}),\r\n\t\tcode: new CLASSES.EditorFieldsClass(this, {\r\n\t\t\tname: 'code',\r\n\t\t\ttype: 'class',\r\n\t\t\tclass: 'CodePreviewClass'\r\n\t\t}),\r\n\t}\r\n\r\n\r\n\tconstructor() {\r\n\t\tsuper(...arguments)\r\n\t\tthis.addChildren(new CLASSES.DescriptionClass, 'description')\r\n\t\tthis.vars = []\r\n\t\tthis.constants = []\r\n\t\tthis.methods = []\r\n\t\tthis.code = null\r\n\t}\r\n\r\n\r\n\teditorRender(options) {\r\n\t\toptions = Object.assign({\r\n\t\t\tparent: layout.editor.block,\r\n\t\t\tname: this.name ?? '',\r\n\t\t\tlabel: '',\r\n\t\t\tobject: false,\r\n\t\t\tprefix: 'edit ',\r\n\t\t\tbtnClass: 'btn-primary',\r\n\t\t\tcaller: 'tree'\r\n\t\t}, options)\r\n\t\tfor(const editorFieldsKey in this.editorFields) {\r\n\t\t\tthis.editorFields[editorFieldsKey].render(options.parent, this[editorFieldsKey], options.label)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\trenderTree(parent) {\r\n\t\tvar item = $(treeTemplate.get('item', {\r\n\t\t\ttext: this.name,\r\n\t\t\tGlobalKey: this.GlobalKey,\r\n\t\t\tchildkey: this?.parent?.GlobalKey,\r\n\t\t\ttreeIcon: this.treeIcon\r\n\t\t})).appendTo(parent)\r\n\t\tif(this.vars.length > 0) {\r\n\t\t\tvar subItem = $(treeTemplate.get('subItem')).appendTo(item)\r\n\t\t\tfor(const k in this.vars) {\r\n\t\t\t\tif(this.vars[k] instanceof CLASSES.CommonClass) {\r\n\t\t\t\t\tconst element = this.vars[k]\r\n\t\t\t\t\telement.renderTree(subItem)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(this.constants.length > 0) {\r\n\t\t\tfor(const k in this.constants) {\r\n\t\t\t\tif(this.constants[k] instanceof CLASSES.CommonClass) {\r\n\t\t\t\t\tconst element = this.constants[k]\r\n\t\t\t\t\telement.renderTree(subItem)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(this.methods.length > 0) {\r\n\t\t\tfor(const k in this.methods) {\r\n\t\t\t\tif(this.methods[k] instanceof CLASSES.CommonClass) {\r\n\t\t\t\t\tconst element = this.methods[k]\r\n\t\t\t\t\telement.renderTree(subItem)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n}\r\n\r\nCLASSES.ObjectClass = class ObjectClass extends CLASSES.ClassClass {\r\n\tconstructor() {\r\n\t\tsuper(...arguments)\r\n\t\tthis.class = null\r\n\t}\r\n}\r\n\r\nCLASSES.methodsClass = class methodsClass extends CLASSES.FunctionClass {\r\n\tconstructor() {\r\n\t\tsuper(...arguments)\r\n\t\tthis.Visibility = 'public'\r\n\t}\r\n\r\n\r\n\teditorRender() {\r\n\t\tthis.parentClass('CommonClass').editorRender.call(this,...arguments)\r\n\t}\r\n}\r\n\r\nCLASSES.ClassVarsClass = class ClassVarsClass extends CLASSES.VarClass {\r\n\tconstructor() {\r\n\t\tsuper(...arguments)\r\n\t\tthis.Visibility = 'public'\r\n\t}\r\n\r\n\r\n\teditorRender() {\r\n\t\tthis.parentClass('CommonClass').editorRender.call(this,...arguments)\r\n\t}\r\n}\r\n\r\nCLASSES.ClassConstantsClass = class ClassConstantsClass extends CLASSES.VarClass {\r\n\ttreeIcon = 'symbol-constant'\r\n\r\n\r\n\tconstructor() {\r\n\t\tsuper(...arguments)\r\n\t\tthis.Visibility = 'public'\r\n\t}\r\n\r\n\r\n\teditorRender(parent, name = false, object = false, options = {}) {\r\n\t\tthis.parentClass('CommonClass').editorRender.call(this,...arguments)\r\n\t}\r\n}\r\n\r\n"],"file":"class.class.js"}