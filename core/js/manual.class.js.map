{"version":3,"names":[],"mappings":"","sources":["assets/projects/AdvanceManualBuilder/core/js/manual.class.js"],"sourcesContent":["'use strict'\r\n\r\nCLASSES.ManualClass = class ManualClass extends CLASSES.CommonClass {\r\n\t_GlobalKey = null\r\n\teditorFields = {\r\n\t\tname       : new CLASSES.EditorFieldsClass(this, {name: 'name'}),\r\n\t\tversion    : new CLASSES.EditorFieldsClass(this, {name: 'version'}),\r\n\t\tdescription: new CLASSES.EditorFieldsClass(this, {\r\n\t\t\tname      : 'description',\r\n\t\t\ttype      : 'class',\r\n\t\t\tclass     : 'DescriptionClass'\r\n\t\t}),\r\n\t\ttype       : new CLASSES.EditorFieldsClass(this, {name: 'type'}),\r\n\t}\r\n\tavailableChildrenClass = {\r\n\t\tClassClass      : {label: 'class'      , childKey: 'elements'},\r\n\t\tFunctionClass   : {label: 'function'   , childKey: 'elements'},\r\n\t\tObjectClass     : {label: 'object'     , childKey: 'elements'},\r\n\t\tCodePreviewClass: {label: 'codePreview', childKey: 'elements'},\r\n\t}\r\n\r\n\r\n\tconstructor(object) {\r\n\t\tsuper()\r\n\t\tGOA.add(this)\r\n\t\tthis.name = ''\r\n\t\tthis.version = ''\r\n\t\tthis.type = ''\r\n\t\tthis.addChildren(new CLASSES.DescriptionClass, 'description')\r\n\t\tthis.elements = []\r\n\t\tthis.classKey = this.constructor.name\r\n\t\tthis.mdTemplate.main = `# $[name]$[version]$[description]`\r\n\t\tObject.assign(this, object)\r\n\r\n\t}\r\n\r\n\r\n\taddElement(value) {\r\n\t\tif(value instanceof CLASSES.CommonClass && value.parent === null) {\r\n\t\t\tvar key = this.elements.length\r\n\t\t\tvalue.setParent(this, key)\r\n\t\t\tthis.elements.push(value)\r\n\t\t\t// Console.info(this.GlobalKey + ' <== ' + value.GlobalKey)\r\n\t\t\treturn true\r\n\t\t}\r\n\t\treturn false\r\n\t}\r\n\r\n\r\n\tremoveElement() { }\r\n\r\n\r\n\tbuild() { }\r\n\r\n\r\n\tprint() { }\r\n\r\n\r\n\ttoObject() {\r\n\t\tvar JSON = {}\r\n\t\tfor(let key in this) {\r\n\t\t\tif(key != 'parent') {\r\n\t\t\t\tlet element = this[key]\r\n\t\t\t\tif(element instanceof CLASSES.CommonClass) {\r\n\t\t\t\t\tJSON[key] = element.toObject()\r\n\t\t\t\t\tcontinue\r\n\t\t\t\t}\r\n\t\t\t\tif(element instanceof Array) {\r\n\t\t\t\t\tJSON[key] = []\r\n\t\t\t\t\tfor(let k in element) {\r\n\t\t\t\t\t\tlet e = element[k]\r\n\t\t\t\t\t\tif(e instanceof CLASSES.CommonClass) {\r\n\t\t\t\t\t\t\tJSON[key].push(e.toObject())\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontinue\r\n\t\t\t\t}\r\n\t\t\t\tJSON[key] = element\r\n\t\t\t}\r\n\t\t}\r\n\t\tdelete JSON.parent\r\n\t\tdelete JSON.editorFields\r\n\t\treturn JSON\r\n\t}\r\n\r\n\r\n\teditorRender(options) {\r\n\t\toptions = Object.assign({\r\n\t\t\tparent: layout.editor.block,\r\n\t\t\tname: this.name ?? '',\r\n\t\t\tlabel: '',\r\n\t\t\tobject: false,\r\n\t\t\tprefix: 'edit ',\r\n\t\t\tbtnClass: 'btn-primary',\r\n\t\t\tcaller: 'tree'\r\n\t\t}, options)\r\n\t\tfor(const editorFieldsKey in this.editorFields) {\r\n\t\t\tthis.editorFields[editorFieldsKey].render(options.parent, this[editorFieldsKey], options.label)\r\n\t\t}\r\n\t\t$(document).trigger(this.GlobalKey + '_rendered', {\r\n\t\t\tobj: this,\r\n\t\t\tkey: this.GlobalKey,\r\n\t\t\toptions: options,\r\n\t\t})\r\n\t\t$(document).trigger('editor_rendered', {\r\n\t\t\tobj: this,\r\n\t\t\tkey: this.GlobalKey,\r\n\t\t\toptions: options,\r\n\t\t})\r\n\t}\r\n\r\n\r\n\tfromObject() { }\r\n\r\n\r\n\trenderTree(parent) {\r\n\t\tGOA.add(this)\r\n\t\tvar item = $(treeTemplate.get('item', {\r\n\t\t\ttext: this.name,\r\n\t\t\tGlobalKey: this.GlobalKey,\r\n\t\t\tchildkey: this?.parent?.GlobalKey,\r\n\t\t\ttreeIcon: this.treeIcon\r\n\t\t})).appendTo(parent)\r\n\t\tvar subItem = $(treeTemplate.get('subItem')).appendTo(item)\r\n\t\tif(this.elements.length > 0) {\r\n\t\t\tfor(const k in this.elements) {\r\n\t\t\t\tif(this.elements[k] instanceof CLASSES.CommonClass) {\r\n\t\t\t\t\tconst element = this.elements[k]\r\n\t\t\t\t\telement.renderTree(subItem)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.renderAddItem(subItem)\r\n\t}\r\n\r\n\r\n\tgetMd() {\r\n\t\tlayout.preview.clear()\r\n\r\n\t\tlayout.preview.add(this.mdTemplate.get('main', {\r\n\t\t\tname       : this.name?this.name                                 : '',\r\n\t\t\tversion    : this.version?'\\n###### version - '+ this.version    : '',\r\n\t\t\tdescription: this.description.body?'\\n'+this.description.body\t : '',\r\n\t\t}))\r\n\t\tfor(const element in this.elements) {\r\n\t\t\tlayout.preview.add(this.elements[element].getMd())\r\n\t\t}\r\n\t\treturn layout.preview.render()\r\n\t}\r\n}\r\n\r\n\r\n\r\n"],"file":"manual.class.js"}