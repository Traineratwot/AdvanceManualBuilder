{"version":3,"names":[],"mappings":"","sources":["assets/projects/AdvanceManualBuilder/old/engine/workstation/js/classes/install_depricatede.js"],"sourcesContent":["class install {\r\n\r\n\tconstructor(Types, Shematik) {\r\n\t\tthis.data ={};\r\n\t\tthis.Types = Types;\r\n\t\tthis.Shematik = Shematik;\r\n\t\tthis.body = $(`<div class=\"select-project\">`).fadeOut();\r\n\t\tthis.body = $(`<div class=\"instalition-main\" style=\"display:none;\">`).appendTo(\"body\");\r\n\t\tthis.body.fadeIn()\r\n\t\tthis.body = $(`<table>`).appendTo(this.body);\r\n\t\tthis.CurrentStep = 0;\r\n\t\tthis.iii = 0;\r\n\t\tthis.step1()\r\n\t}\r\n\tstep1() {\r\n\t\tvar self = this;\r\n\t\tvar tr = $(`<tr>`).appendTo(this.body)\r\n\t\tvar td = $(`<td>`).appendTo(tr)\r\n\t\tvar select = `<select>`;\r\n\t\tfor (const key in this.Types.project) {\r\n\t\t\tconst e = this.Types.project[key];\r\n\t\t\tselect += `<option value=\"${e}\">${e}</op\r\n\t\t\ttion>`;\r\n\t\t}\r\n\t\tselect += `</select>`\r\n\t\tthis.data.ProjectType = $(select).appendTo(td);\r\n\t\ttd = $(`<td>`).appendTo(tr);\r\n\t\tthis.data.ProjectName = $(`<input type=\"text\" placeholder=\"Name\">`).appendTo(td);\r\n\t\ttd = $(`<td>`).appendTo(tr);\r\n\t\tvar button = $(`<button>next</button>`).appendTo(td);\r\n\t\tbutton.on('click', (e) => {\r\n\t\t\t$(e.target).attr('disabled', \"\")\r\n\t\t\tself.data.ProjectType.attr('disabled', \"\")\r\n\t\t\tself.overstep()\r\n\t\t})\r\n\t}\r\n\toverstep() {\r\n\t\tvar self = this;\r\n\t\tShematik = this.Shematik.Project.typeField[this.data.ProjectType.val()];\r\n\t\tvar key = Object.keys(Shematik)[this.CurrentStep];\r\n\t\tif (!key) {\r\n\t\t\tvar data = JSON.stringify(this.export())\r\n\t\t\t$.ajax({\r\n\t\t\t\ttype: \"POST\",\r\n\t\t\t\turl: \"engine/core/CreateProject.php\",\r\n\t\t\t\tdata: `data=${data}`,\r\n\t\t\t\tdataType: \"text\",\r\n\t\t\t\tsuccess: function (response) {\r\n\t\t\t\t\tconsole.log(response);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\treturn \"finish\";\r\n\t\t}\r\n\t\tvar var_name = `Project${key}`;\r\n\t\tvar CurrentField = Shematik[key]\r\n\t\tif (CurrentField.type == \"array\") {\r\n\t\t} else {\r\n\t\t\tthis.data[var_name] = null\r\n\t\t}\r\n\t\tvar addAction;\r\n\t\tvar tr = $(`<tr>`).appendTo(this.body)\r\n\t\tvar td;\r\n\t\ttd = $(`<td>`).appendTo(tr)\r\n\t\t$(`<span>${key}</span>`).appendTo(td);\r\n\t\tfor (const k in CurrentField.fields) {\r\n\t\t\tif (CurrentField.fields.hasOwnProperty(k)) {\r\n\t\t\t\tconst e = CurrentField.fields[k];\r\n\t\t\t\t\r\n\t\t\t\tvar _field;\r\n\t\t\t\tswitch (k.replace(/\\d/g,'')) {\r\n\t\t\t\t\tcase \"select\":\r\n\t\t\t\t\t\ttd = $(`<td class=\"select\">`).appendTo(tr)\r\n\t\t\t\t\t\t_field = `\r\n\t\t\t\t\t\t<select>`;\r\n\t\t\t\t\t\tif (typeof e.options == 'object') {\r\n\t\t\t\t\t\t\tfor (const val of e.options) {\r\n\t\t\t\t\t\t\t\t_field += `<option value=\"${val}\">${val}</option>`\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else if (typeof e.options == 'string') {\r\n\t\t\t\t\t\t\tvar _kkk = e.options.split('.')\r\n\t\t\t\t\t\t\tvar obj = this[_kkk[0]][_kkk[1]]\r\n\t\t\t\t\t\t\tfor (const val of obj) {\r\n\t\t\t\t\t\t\t\t_field += `<option value=\"${val}\">${val}</option>`\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t_field += `</select>\r\n\t\t\t\t\t\t`;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"text\":\r\n\t\t\t\t\t\ttd = $(`<td class=\"text\">`).appendTo(tr)\r\n\t\t\t\t\t\t_field = `<input type=\"text\" placeholder=\"${e.placeholder}\">`;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"textarea\":\r\n\t\t\t\t\t\ttd = $(`<td class=\"textarea\">`).appendTo(tr)\r\n\t\t\t\t\t\t_field = `\r\n\t\t\t\t\t\t<textarea rows=\"3\" placeholder=\"${e.placeholder}\"></textarea>\r\n\t\t\t\t\t\t`;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"button\":\r\n\t\t\t\t\t\ttd = $(`<td class=\"button\">`).appendTo(tr)\r\n\t\t\t\t\t\t_field = `<button>${e.title}</button>`;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\ttd = $(`<td class=\"text\">`).appendTo(tr)\r\n\t\t\t\t\t\t_field = `<input type=\"${k}\" placeholder=\"${e.placeholder}\">`;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\t_field = $(_field).appendTo(td);\r\n\t\t\t\tif (e.action == 'add') {\r\n\t\t\t\t\taddAction = _field\r\n\t\t\t\t}\r\n\t\t\t\tif (e.value) {\r\n\t\t\t\t\tif (CurrentField.type == \"array\") {\r\n\t\t\t\t\t\tif (!this.data[var_name]) {\r\n\t\t\t\t\t\t\tthis.data[var_name] = []\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (!this.data[var_name][this.iii]) {\r\n\t\t\t\t\t\t\tthis.data[var_name][this.iii] = {}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.data[var_name][this.iii][e.value] = _field\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.data[var_name] = {}\r\n\t\t\t\t\t\tthis.data[var_name][e.value] = _field\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\ttd = $(`<td>`).appendTo(tr)\r\n\t\tvar button = $(`<button>next</button>`).appendTo(td);\r\n\t\tbutton.on('click', (e) => {\r\n\t\t\tthis.CurrentStep++;\r\n\t\t\tif(addAction){\r\n\t\t\t\taddAction.attr('disabled',\"\");\r\n\t\t\t}\r\n\t\t\tself.iii = 0\r\n\t\t\t// $(e.target).attr('disabled',\"\");\r\n\t\t\tself.overstep()\r\n\t\t})\r\n\t\tif(addAction){\r\n\t\t\taddAction.on('click', (e) => {\r\n\t\t\t\t$(e.target).attr('disabled',\"\");\r\n\t\t\t\tbutton.attr('disabled',\"\");\r\n\t\t\t\tself.iii++;\r\n\t\t\t\tself.overstep()\r\n\t\t\t})\r\n\t\t}\r\n\t\tthis.table();\r\n\t}\r\n\r\n\ttable() {\r\n\t\tvar nums = []\r\n\t\t$(\".instalition-main table tr\").each(function(row){\r\n\t\t\tvar i = 0;\r\n\t\t\t$(this).find('td').each(function(cell){\r\n\t\t\t\ti++;\r\n\t\t\t});\r\n\t\t\tnums.push(i);\r\n\t\t});\r\n\t\tvar max = Math.max(...nums)\r\n\t\t$(\".instalition-main table tr\").each(function(row){\r\n\t\t\tvar i = 0;\r\n\t\t\t$(this).find('td').each(function(cell){\r\n\t\t\t\ti++;\r\n\t\t\t});\r\n\t\t\tvar diff = max - i+1;\r\n\t\t\t$(this).find('td:eq(1)').attr(\"colspan\",diff)\r\n\t\t});\r\n\t}\r\n\r\n\texport(){\r\n\t\tvar exportData = {};\r\n\t\tfor (const key in this.data) {\r\n\t\t\tif (this.data.hasOwnProperty(key)) {\r\n\t\t\t\tconst e = this.data[key];\r\n\t\t\t\tvar cn = e.constructor.name;\r\n\t\t\t\tswitch (cn) {\r\n\t\t\t\t\tcase \"k\":\r\n\t\t\t\t\t\texportData[key] = e.val() \r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"Array\":\r\n\t\t\t\t\t\tvar i = 0;\r\n\t\t\t\t\t\tfor (const iterator of e) {\r\n\t\t\t\t\t\t\tfor (const k in iterator) {\r\n\t\t\t\t\t\t\t\tif (iterator.hasOwnProperty(k)) {\r\n\t\t\t\t\t\t\t\t\tconst elem = iterator[k];\r\n\t\t\t\t\t\t\t\t\tif (!exportData[key]) {\r\n\t\t\t\t\t\t\t\t\t\texportData[key] = []\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif (!exportData[key][i]) {\r\n\t\t\t\t\t\t\t\t\t\texportData[key][i] = {}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\texportData[key][i][k] = elem.val()\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\ti++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"Object\":\r\n\t\t\t\t\t\tfor (const k in e) {\r\n\t\t\t\t\t\t\tif (e.hasOwnProperty(k)) {\r\n\t\t\t\t\t\t\t\tconst elem = e[k];\r\n\t\t\t\t\t\t\t\tif (!exportData[key]) {\r\n\t\t\t\t\t\t\t\t\texportData[key] = ''\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\texportData[key] = elem.val()\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn exportData\r\n\t}\r\n}\r\n\r\n//# sourceMappingURL=install_depricatede.js.map\r\n"],"file":"install_depricatede.js"}