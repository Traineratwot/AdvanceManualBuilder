{"version":3,"names":[],"mappings":"","sources":["assets/projects/AdvanceManualBuilder/old/engine/workstation/js/classes/workstation.js"],"sourcesContent":["var Project, Shematik, Types, Properties = {};\r\nvar ThisNewObject, CreatChunkMenu, FileText;\r\nvar _Projects, _Shematik, _Types, _Properties–±, TreeFirstRender = false\r\n$(document).ready(function () {\r\n\tMassLoad()\r\n});\r\nfunction MassLoad() {\r\n\t_Projects, _Shematik, _Types, _Properties = false\r\n\tProject, Shematik, Types, Properties = {};\r\n\t$.get(\"../../BD/Projects.json\", '',\r\n\t\tfunction (data) {\r\n\t\t\tProject = data['rows'][new URLSearchParams(window.location.search).get('ProjectId')]\r\n\t\t\t$(\"#tree header\").html(\"\");\r\n\t\t\tfit_text($(`<h1 class=\"fit_text\">${Project.name}</h1>`).appendTo(\"#tree header\"))\r\n\t\t\t\t.on('click', () => {\r\n\t\t\t\t\tvar SEND = {}\r\n\t\t\t\t\tSEND.data = Project\r\n\t\t\t\t\tSEND.prev = 1\r\n\t\t\t\t\t$.ajax({\r\n\t\t\t\t\t\ttype: \"POST\",\r\n\t\t\t\t\t\turl: \"../../engine/core/CreateProject.php\",\r\n\t\t\t\t\t\tdata: SEND,\r\n\t\t\t\t\t\tdataType: \"text\",\r\n\t\t\t\t\t\tsuccess: function (response) {\r\n\t\t\t\t\t\t\tconvert(response);\r\n\t\t\t\t\t\t\tdocument.querySelectorAll('pre code').forEach((block) => {\r\n\t\t\t\t\t\t\t\thljs.highlightBlock(block);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t_Projects = true;\r\n\t\t},\r\n\t\t\"json\"\r\n\t);\r\n\t$.get(`../../BD/${new URLSearchParams(window.location.search).get('ProjectId')}.json`, '',\r\n\t\tfunction (data) {\r\n\t\t\tProperties = data;\r\n\t\t\t_Properties = true;\r\n\t\t},\r\n\t\t\"json\"\r\n\t);\r\n\t$.get(\"json/Shematik.json\", '',\r\n\t\tfunction (data) {\r\n\t\t\tShematik = data;\r\n\t\t\t_Shematik = true;\r\n\t\t},\r\n\t\t\"json\"\r\n\t);\r\n\t$.get(\"json/Types.json\", '',\r\n\t\tfunction (data) {\r\n\t\t\tTypes = data;\r\n\t\t\t_Types = true;\r\n\t\t},\r\n\t\t\"json\"\r\n\t);\r\n\r\n\r\n\tvar iload = setInterval(() => {\r\n\t\tif (_Projects === true && _Shematik === true && _Types === true && _Properties === true) {\r\n\t\t\tclearInterval(iload);\r\n\t\t\trenderTree()\r\n\t\t\t$(window).on('resize', function () {\r\n\t\t\t\tfit_text($('.fit_text'))\r\n\t\t\t});\r\n\t\t\tconvert();\r\n\t\t\tinitSCM();\r\n\t\t\t$(\".NewChunks\").on(\"click\", function (event) {\r\n\t\t\t\tCreatChunkMenu.show(event);\r\n\t\t\t});\r\n\t\t}\r\n\t}, 10);\r\n}\r\n\r\n\r\nfunction initSCM() {\r\n\tvar menu = [];\r\n\tTypes.ChunksType[Project.PorjectData.Projectype].forEach(element => {\r\n\t\tmenu.push({\r\n\t\t\titem: element,\r\n\t\t\tfunction: (e, self, AnyValue) => {\r\n\t\t\t\tThisNewObject = CreateClass(element, AnyValue)\r\n\t\t\t}\r\n\t\t})\r\n\t});\r\n\tCreatChunkMenu = new SCM(menu);\r\n}\r\n\r\nfunction renderTree() {\r\n\tif (TreeFirstRender) {\r\n\t\t$('#tree #content').jstree(true).settings.core.data = Properties.tree;\r\n\t\t$('#tree #content').jstree(true).redraw();\r\n\t\t$('#tree #content').jstree(true).refresh();\r\n\t} else {\r\n\t\tTreeFirstRender = true;\r\n\t\t$(\"#tree #content\").html(\"\");\r\n\t\t$('#tree #content').jstree({\r\n\t\t\t'core': {\r\n\t\t\t\t'multiple': false,\r\n\t\t\t\t'data': Properties.tree\r\n\t\t\t}\r\n\t\t});\r\n\t\t$('#tree #content').on(\"changed.jstree\", function (e, data) {\r\n\t\t\tif (data.selected.length) {\r\n\t\t\t\tvar node = data.instance.get_node(data.selected[0])\r\n\t\t\t\tvar id = data.instance.get_node(data.selected[0]).original.id\r\n\t\t\t\tparent = node.parent\r\n\t\t\t\tif (!parent || parent == \"#\") {\r\n\t\t\t\t\tparent = 0\r\n\t\t\t\t}\r\n\t\t\t\t//console.log(node);\r\n\t\t\t\tif (id <= 0) {\r\n\t\t\t\t\tid = Math.abs(id);\r\n\t\t\t\t\tCreatChunkMenu.show(null, [parent, -1]);\r\n\t\t\t\t\tPreview()\r\n\t\t\t\t} else {\r\n\t\t\t\t\tThisNewObject = CreateClass(Properties.chunks[id].ClassType, [parent, id], Properties.chunks[id])\r\n\t\t\t\t\tPreview()\r\n\t\t\t\t}\r\n\t\t\t\t//alert('The selected node is: ' + data.instance.get_node(data.selected[0]).id);\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n}\r\n\r\nfunction Preview() {\r\n\tif (ThisNewObject) {\r\n\t\tSEND = {}\r\n\t\tSEND.data = ThisNewObject.export()\r\n\t\tSEND.project = Project\r\n\t\t$.ajax({\r\n\t\t\ttype: \"POST\",\r\n\t\t\turl: \"../../engine/core/addChunks.php\",\r\n\t\t\tdata: SEND,\r\n\t\t\tdataType: \"text\",\r\n\t\t\tsuccess: function (response) {\r\n\t\t\t\tconvert(response);\r\n\t\t\t\tdocument.querySelectorAll('pre code').forEach((block) => {\r\n\t\t\t\t\thljs.highlightBlock(block);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\nfunction save() {\r\n\tif (ThisNewObject) {\r\n\t\tSEND = {}\r\n\t\tSEND.parent = ThisNewObject.Parent\r\n\t\tSEND.data = ThisNewObject.export()\r\n\t\tSEND.project = Project\r\n\t\tSEND.id = ThisNewObject.id || -1\r\n\t\tSEND.save = true\r\n\t\t$.ajax({\r\n\t\t\ttype: \"POST\",\r\n\t\t\turl: \"../../engine/core/addChunks.php\",\r\n\t\t\tdata: SEND,\r\n\t\t\tdataType: \"text\",\r\n\t\t\tsuccess: function (response) {\r\n\t\t\t\tconvert(response);\r\n\t\t\t\tdocument.querySelectorAll('pre code').forEach((block) => {\r\n\t\t\t\t\thljs.highlightBlock(block);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\nvar whiletrue = true;\r\nfunction prev(stop = false) {\r\n\tif (!stop && whiletrue) {\r\n\t\twhiletrue = setInterval(() => {\r\n\t\t\tPreview()\r\n\t\t}, 1000);\r\n\t} else {\r\n\t\tclearInterval(whiletrue);\r\n\t\twhiletrue = false;\r\n\t\tsetTimeout(() => {\r\n\t\t\tdocument.querySelectorAll('pre code').forEach((block) => {\r\n\t\t\t\thljs.highlightBlock(block);\r\n\t\t\t});\r\n\t\t}, 100);\r\n\t\tsetTimeout(() => {\r\n\t\t\twhiletrue = true\r\n\t\t}, 900);\r\n\t}\r\n}\r\nvar converter = new showdown.Converter();\r\nfunction convert(text) {\r\n\thtml = converter.makeHtml(text);\r\n\t$(\"#prev\").html(html);\r\n}\r\n\r\n\r\n\r\n//# sourceMappingURL=workstation.js.map\r\n"],"file":"workstation.js"}